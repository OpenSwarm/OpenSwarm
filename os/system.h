/*!
 * \file system.h
 * \author  Stefan M. Trenkwalder <s.trenkwalder@openswarm.org>
 * \version 1.0
 *
 * \date{07 July 2014}
 * 
 * \brief This file initialises and starts OpenSwarm.
 */

/*! \mainpage OpenSwarm documentation
 * \image html ../doc/img/openswarm_logo.png
 *
 * \section intro_sec Introduction
 * OpenSwarm is an easy-to-use event-driven preemptive operating system for miniature robots. It offers abstract hardware-independent functions to make user code more extendible, maintainable, and portable.
 * The hybrid kernel provides preemptive and cooperative schduling, asynchronous programming models with events, and inter-process communication functions. \n\n  
 * OpenSwarm was created during the PhD of Stefan M Trenkwalder (http://trenkwalder.tech) at the University of Sheffield (http://www.sheffield.ac.uk/) under the Supervision of Dr. Roderich Gross and Dr. Andreas Kolling. 
 *
 * The code of OpenSwarm can be basically devided into 3 different modules:
 * - Process Management
 * - Event System
 * - I/O Management (This includes device specific sensors and actuators)  
 *
 * \section brief_dec Documentation Structure
 * This documentation was generated by Doxygen (http://www.doxygen.org) and is structured as follows
 * - Main Page: This tab represents an short introduction to and general comments on OpenSwarm
 * - Modules: This tab presents a list of logical units of OpenSwarm (such as Process Management or Event System)
 * - Data Structures: This tab shows a list of all used data structures inside OpenSwarm.
 * - Files: This tab lists the documentation of each individual file in OpenSwarm.
 *  
 * \section LICENSE
 * LICENSE: adapted FreeBSD License
 * Copyright (c) 2015, Stefan M. Trenkwalder
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 * 3. If this or parts of this source code (as code or binary) is, in any form, used for an commercial product or service (in any form), this product or service must provide a clear notice/message to any user/customer that OpenSwarm was used in this product.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * \section link_sec Links
 * - http://www.openswarm.org/          	The official OpenSwarm website
 * - http://trenkwalder.tech/   		The academic webpage of Stefan Trenkwalder
 * - http://naturalrobotics.group.shef.ac.uk/   The website of the research group 
 * - http://openswarm.org/license/              The link to the newest license (in case it changed)
 */

/*
 has been started at the Ecole Polytechnique Federale de Lausanne as 
 * collaboration between the Autonomous Systems Lab, the Swarm-Intelligent Systems
 * group and the Laboratory of Intelligent System.
 * \n \n An educational robot:
 * The main goal of this project is to develop a miniature mobile robot for educational
 * purposes at university level. To achieve this goal the robot needs, in our opinion,
 * the following features:
 * - Good structure. The robot should have a clean mechanical structure, simple to
 * understand. The electronics, processor structure and software have to be a good
 * example of a clean modern system. 
 * - Flexibility. The robot should cover a large spectrum of educational activities and
 * should therefore have a large potential in its sensors, processing power and
 */
#define SYS_MOTOR_USED
#define SYS_UART1_USED
#define SYS_REMOTECONTROL_USED
#define SYS_CAMERA_USED

void Sys_Init_Kernel(void);   //initialises the hardware
void Sys_Start_Kernel(void);    //starts all needed functions
