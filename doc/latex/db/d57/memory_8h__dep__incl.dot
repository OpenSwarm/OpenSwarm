digraph "memory.h"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="memory.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="memory.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dd5/memory_8c.html",tooltip="defines functions to allocate, free, and copy memory "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="events/events.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/deb/events_8c.html",tooltip="defines functions to create, (un)subscribe, (un)register, and delete events and related handler..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="io/io.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d0a/io_8c.html",tooltip="defines functions to control the IO timer and to (un)register IO Handler. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="platform/e-puck/camera.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/de0/camera_8c.html",tooltip="This file includes functions to process data retrieved by a camera. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="platform/e-puck/i2c.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dcb/i2c_8c.html",tooltip="defines functions to read and write on the I2C interface. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="platform/e-puck/i2c\l_data.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dd6/i2c__data_8c.html",tooltip="defines functions to manage the I2C queue. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="platform/e-puck/io\l_HDI.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d87/io__HDI_8c.html",tooltip="Hardware dependent implementations to start and stop the I/O timer. This timer executes IO functions ..."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="platform/e-puck/process\l_Management_HDI.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d78/process__Management__HDI_8c.html",tooltip="Hardware dependent implementations to manage processes (e.g. task swichting) "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="platform/e-puck/uart.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d87/uart_8c.html",tooltip="This file includes functions needed to transmit data via uart(1 & 2). "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="platform/e-puck/uart\l_HDI.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d3a/uart__HDI_8c.html",tooltip="Hardware dependent implementations to control the message flow of the UART interface. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="processes/data.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/da9/data_8c.html",tooltip="This file includes all functions which are needed to manage data structures needed by the processes m..."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="processes/process_Management.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d14/process__Management_8c.html",tooltip="This file includes all functions wich are needed to manage processes (e.g. task swichting) ..."];
}
